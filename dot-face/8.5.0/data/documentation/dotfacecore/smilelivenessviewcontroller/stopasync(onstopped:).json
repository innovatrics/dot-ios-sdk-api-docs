{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)"},"sections":[],"abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"code":"onStopped","type":"codeVoice"},{"type":"text","text":" callback is called after the process has stopped."}],"variants":[{"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]}],"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopAsync","kind":"identifier"},{"kind":"text","text":"("},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"modules":[{"name":"DotFaceCore"}],"title":"stopAsync(onStopped:)","externalID":"c:@M@DotFaceCore@objc(cs)DOTFSmileLivenessViewController(im)stopAsyncOnStopped:","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"symbolKind":"method"},"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController/stopAsync(onStopped:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"stopAsync(onStopped:)","abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)","role":"symbol","navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}]},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"url":"\/documentation\/dotfacecore","role":"collection","type":"topic","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","kind":"symbol","title":"DotFaceCore","abstract":[{"type":"text","text":"version: 8.5.0"}]},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController":{"kind":"symbol","navigatorTitle":[{"text":"SmileLivenessViewController","kind":"identifier"}],"abstract":[{"text":"UI component for evaluating liveness by detecting face expression.","type":"text"}],"type":"topic","title":"SmileLivenessViewController","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SmileLivenessViewController"}],"role":"symbol","url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"path":"\/metadata\/title","op":"replace","value":"stopAsyncOnStopped:"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"value":[{"text":"- ","kind":"text"},{"text":"stopAsyncOnStopped:","kind":"identifier"}],"op":"replace","path":"\/metadata\/fragments"},{"path":"\/topicSections","op":"add","value":null},{"value":null,"path":"\/relationshipsSections","op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"stopAsyncOnStopped:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void (^)(void)","kind":"typeIdentifier","preciseIdentifier":"c:BFv()"},{"kind":"text","text":") "},{"text":"onStopped","kind":"internalParam"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"}},{"value":"stopAsyncOnStopped:","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"}]},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/title","value":"DOTFSmileLivenessViewController","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"DOTFSmileLivenessViewController"}],"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/fragments"}]}]}