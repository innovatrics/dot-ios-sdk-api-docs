{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"modules":[{"name":"DotFaceCore"}],"title":"stopAsync(onStopped:)","externalID":"c:@M@DotFaceCore@objc(cs)DOTFMagnifEyeLivenessViewController(im)stopAsyncOnStopped:","roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"role":"symbol","symbolKind":"method"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Stop the MagnifEye liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/MagnifEyeLivenessViewController"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dotfacecore\/magnifeyelivenessviewcontroller\/stopasync(onstopped:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/magnifeyelivenessviewcontroller\/stopasync(onstopped:)"]}],"identifier":{"url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/MagnifEyeLivenessViewController\/stopAsync(onStopped:)","interfaceLanguage":"swift"},"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/MagnifEyeLivenessViewController":{"kind":"symbol","url":"\/documentation\/dotfacecore\/magnifeyelivenessviewcontroller","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MagnifEyeLivenessViewController"}],"abstract":[{"text":"UI component for capturing images suitable for MagnifEye liveness evaluation.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MagnifEyeLivenessViewController"}],"title":"MagnifEyeLivenessViewController","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/MagnifEyeLivenessViewController"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/MagnifEyeLivenessViewController/stopAsync(onStopped:)":{"url":"\/documentation\/dotfacecore\/magnifeyelivenessviewcontroller\/stopasync(onstopped:)","abstract":[{"type":"text","text":"Stop the MagnifEye liveness process asynchronously. The "},{"code":"onStopped","type":"codeVoice"},{"type":"text","text":" callback is called after the process has stopped."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}],"type":"topic","title":"stopAsync(onStopped:)","role":"symbol","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/MagnifEyeLivenessViewController\/stopAsync(onStopped:)"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"url":"\/documentation\/dotfacecore","abstract":[{"text":"version: 8.2.0","type":"text"}],"kind":"symbol","type":"topic","title":"DotFaceCore","role":"collection","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"stopAsyncOnStopped:"},{"op":"replace","value":"method","path":"\/metadata\/symbolKind"},{"value":[{"kind":"text","text":"- "},{"text":"stopAsyncOnStopped:","kind":"identifier"}],"op":"replace","path":"\/metadata\/fragments"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","value":null,"path":"\/relationshipsSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:BFv()","text":"void (^)(void)","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"onStopped"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1MagnifEyeLivenessViewController\/title","value":"DOTFMagnifEyeLivenessViewController"},{"value":[{"text":"DOTFMagnifEyeLivenessViewController","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1MagnifEyeLivenessViewController\/fragments"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1MagnifEyeLivenessViewController~1stopAsync(onStopped:)\/title","value":"stopAsyncOnStopped:","op":"replace"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1MagnifEyeLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"op":"replace"}]}]}