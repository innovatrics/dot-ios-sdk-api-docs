{"abstract":[{"text":"Stop the eye gaze liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"kind":"symbol","variants":[{"paths":["\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)"]}],"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController\/stopAsync(onStopped:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}],"symbolKind":"method","title":"stopAsync(onStopped:)","externalID":"c:@M@DotFaceCore@objc(cs)DOTFEyeGazeLivenessViewController(im)stopAsyncOnStopped:","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"DotFaceCore"}]},"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"abstract":[{"type":"text","text":"version: 8.4.0"}],"type":"topic","title":"DotFaceCore","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","kind":"symbol","url":"\/documentation\/dotfacecore","role":"collection"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/EyeGazeLivenessViewController":{"title":"EyeGazeLivenessViewController","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EyeGazeLivenessViewController","kind":"identifier"}],"url":"\/documentation\/dotfacecore\/eyegazelivenessviewcontroller","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"UI component for evaluating liveness by tracking eye gaze."}],"navigatorTitle":[{"text":"EyeGazeLivenessViewController","kind":"identifier"}],"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/EyeGazeLivenessViewController/stopAsync(onStopped:)":{"kind":"symbol","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController\/stopAsync(onStopped:)","type":"topic","title":"stopAsync(onStopped:)","abstract":[{"text":"Stop the eye gaze liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"url":"\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"onStopped"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"role":"symbol","navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}]}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","value":"stopAsyncOnStopped:","op":"replace"},{"value":"method","path":"\/metadata\/symbolKind","op":"replace"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"text":"stopAsyncOnStopped:","kind":"identifier"}],"path":"\/metadata\/fragments"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","value":null,"path":"\/relationshipsSections"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void (^)(void)","preciseIdentifier":"c:BFv()"},{"kind":"text","text":") "},{"kind":"internalParam","text":"onStopped"},{"kind":"text","text":";"}],"languages":["occ"]}]}},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController\/title","op":"replace","value":"DOTFEyeGazeLivenessViewController"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController\/fragments","op":"replace","value":[{"text":"DOTFEyeGazeLivenessViewController","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController~1stopAsync(onStopped:)\/title","value":"stopAsyncOnStopped:","op":"replace"},{"op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController~1stopAsync(onStopped:)\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}