{"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"DotFaceCore"}],"navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"title":"stopAsync(onStopped:)","externalID":"c:@M@DotFaceCore@objc(cs)DOTFEyeGazeLivenessViewController(im)stopAsyncOnStopped:"},"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController"]]},"abstract":[{"type":"text","text":"Stop the eye gaze liveness process asynchronously. The "},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"text":"onStopped","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController\/stopAsync(onStopped:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/EyeGazeLivenessViewController":{"url":"\/documentation\/dotfacecore\/eyegazelivenessviewcontroller","type":"topic","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController","title":"EyeGazeLivenessViewController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EyeGazeLivenessViewController","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EyeGazeLivenessViewController"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"UI component for evaluating liveness by tracking eye gaze."}]},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/EyeGazeLivenessViewController/stopAsync(onStopped:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/EyeGazeLivenessViewController\/stopAsync(onStopped:)","abstract":[{"text":"Stop the eye gaze liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"url":"\/documentation\/dotfacecore\/eyegazelivenessviewcontroller\/stopasync(onstopped:)","navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"title":"stopAsync(onStopped:)","type":"topic"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"role":"collection","url":"\/documentation\/dotfacecore","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","kind":"symbol","abstract":[{"text":"version: 8.3.2","type":"text"}],"title":"DotFaceCore","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"path":"\/metadata\/title","value":"stopAsyncOnStopped:","op":"replace"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"op":"replace","path":"\/metadata\/fragments"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"path":"\/seeAlsoSections","op":"add","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:BFv()","text":"void (^)(void)","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"onStopped","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]}},{"op":"replace","value":"DOTFEyeGazeLivenessViewController","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController\/title"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController\/fragments","value":[{"kind":"identifier","text":"DOTFEyeGazeLivenessViewController"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController~1stopAsync(onStopped:)\/title","value":"stopAsyncOnStopped:"},{"value":[{"kind":"text","text":"- "},{"text":"stopAsyncOnStopped:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1EyeGazeLivenessViewController~1stopAsync(onStopped:)\/fragments","op":"replace"}]}]}