{"abstract":[{"type":"text","text":"Stop the smile liveness process asynchronously. The "},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]}],"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"DotFaceCore"}],"navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"externalID":"c:@M@DotFaceCore@objc(cs)DOTFSmileLivenessViewController(im)stopAsyncOnStopped:","title":"stopAsync(onStopped:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController/stopAsync(onStopped:)":{"title":"stopAsync(onStopped:)","type":"topic","abstract":[{"type":"text","text":"Stop the smile liveness process asynchronously. The "},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}],"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","kind":"symbol","url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)","role":"symbol"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","abstract":[{"type":"text","text":"version: 8.3.1"}],"url":"\/documentation\/dotfacecore","type":"topic","title":"DotFaceCore","kind":"symbol","role":"collection"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController":{"kind":"symbol","url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SmileLivenessViewController"}],"abstract":[{"text":"UI component for evaluating liveness by detecting face expression.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController","title":"SmileLivenessViewController","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SmileLivenessViewController"}]}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"stopAsyncOnStopped:"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"stopAsyncOnStopped:","kind":"identifier"}]},{"op":"add","path":"\/topicSections","value":null},{"value":null,"path":"\/relationshipsSections","op":"add"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"kind":"text","text":"("},{"text":"void (^)(void)","kind":"typeIdentifier","preciseIdentifier":"c:BFv()"},{"kind":"text","text":") "},{"kind":"internalParam","text":"onStopped"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]},"op":"replace","path":"\/primaryContentSections\/0"},{"op":"replace","value":"stopAsyncOnStopped:","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"stopAsyncOnStopped:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/title","value":"DOTFSmileLivenessViewController"},{"value":[{"text":"DOTFSmileLivenessViewController","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}