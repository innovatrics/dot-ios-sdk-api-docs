{"identifier":{"url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]},{"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"platforms":["iOS"]}]}],"metadata":{"title":"stopAsync(onStopped:)","navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"modules":[{"name":"DotFaceCore"}],"roleHeading":"Instance Method","externalID":"c:@M@DotFaceCore@objc(cs)DOTFSmileLivenessViewController(im)stopAsyncOnStopped:","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"symbolKind":"method"},"sections":[],"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"type":"topic","kind":"symbol","url":"\/documentation\/dotfacecore","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","abstract":[{"text":"version: 8.1.0","type":"text"}],"title":"DotFaceCore","role":"collection"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController":{"url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SmileLivenessViewController"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SmileLivenessViewController","kind":"identifier"}],"abstract":[{"text":"UI component for evaluating liveness by detecting face expression.","type":"text"}],"type":"topic","title":"SmileLivenessViewController"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController/stopAsync(onStopped:)":{"role":"symbol","navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Stop the smile liveness process asynchronously. The "},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"title":"stopAsync(onStopped:)","url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"value":"stopAsyncOnStopped:","op":"replace","path":"\/metadata\/title"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"}]},{"value":null,"op":"add","path":"\/topicSections"},{"path":"\/relationshipsSections","op":"add","value":null},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:BFv()","text":"void (^)(void)"},{"text":") ","kind":"text"},{"text":"onStopped","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"}},{"value":"DOTFSmileLivenessViewController","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/fragments","value":[{"kind":"identifier","text":"DOTFSmileLivenessViewController"}]},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/title","op":"replace","value":"stopAsyncOnStopped:"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}