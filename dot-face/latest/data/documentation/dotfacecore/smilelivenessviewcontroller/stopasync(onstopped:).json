{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"kind":"text","text":"("},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]}],"identifier":{"url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController"]]},"abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"type":"text","text":" callback is called after the process has stopped."}],"metadata":{"roleHeading":"Instance Method","externalID":"c:@M@DotFaceCore@objc(cs)DOTFSmileLivenessViewController(im)stopAsyncOnStopped:","title":"stopAsync(onStopped:)","modules":[{"name":"DotFaceCore"}],"navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol"},"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"abstract":[{"type":"text","text":"version: 8.4.0"}],"type":"topic","title":"DotFaceCore","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","kind":"symbol","url":"\/documentation\/dotfacecore","role":"collection"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController":{"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SmileLivenessViewController","kind":"identifier"}],"url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller","abstract":[{"type":"text","text":"UI component for evaluating liveness by detecting face expression."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"SmileLivenessViewController","kind":"identifier"}],"kind":"symbol","title":"SmileLivenessViewController"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController/stopAsync(onStopped:)":{"abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","title":"stopAsync(onStopped:)","navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"onStopped"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"value":"stopAsyncOnStopped:","op":"replace","path":"\/metadata\/title"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"stopAsyncOnStopped:","kind":"identifier"}],"op":"replace"},{"path":"\/topicSections","op":"add","value":null},{"value":null,"op":"add","path":"\/relationshipsSections"},{"path":"\/seeAlsoSections","op":"add","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void (^)(void)","preciseIdentifier":"c:BFv()"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"onStopped"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]}},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/title","value":"DOTFSmileLivenessViewController","op":"replace"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/fragments","value":[{"text":"DOTFSmileLivenessViewController","kind":"identifier"}],"op":"replace"},{"value":"stopAsyncOnStopped:","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"op":"replace"}]}]}