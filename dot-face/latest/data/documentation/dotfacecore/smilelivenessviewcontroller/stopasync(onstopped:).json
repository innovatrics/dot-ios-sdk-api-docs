{"sections":[],"kind":"symbol","abstract":[{"text":"Stop the smile liveness process asynchronously. The ","type":"text"},{"type":"codeVoice","code":"onStopped"},{"text":" callback is called after the process has stopped.","type":"text"}],"variants":[{"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)"]}],"hierarchy":{"paths":[["doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore","doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController"]]},"identifier":{"url":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"c:@M@DotFaceCore@objc(cs)DOTFSmileLivenessViewController(im)stopAsyncOnStopped:","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopAsync"},{"text":"(","kind":"text"},{"text":"onStopped","kind":"externalParam"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"navigatorTitle":[{"text":"stopAsyncOnStopped:","kind":"identifier"}],"modules":[{"name":"DotFaceCore"}],"title":"stopAsync(onStopped:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController/stopAsync(onStopped:)":{"navigatorTitle":[{"kind":"identifier","text":"stopAsyncOnStopped:"}],"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController\/stopAsync(onStopped:)","url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller\/stopasync(onstopped:)","abstract":[{"type":"text","text":"Stop the smile liveness process asynchronously. The "},{"code":"onStopped","type":"codeVoice"},{"type":"text","text":" callback is called after the process has stopped."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"stopAsync","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onStopped"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"stopAsync(onStopped:)","role":"symbol","type":"topic"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore/SmileLivenessViewController":{"identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore\/SmileLivenessViewController","navigatorTitle":[{"text":"SmileLivenessViewController","kind":"identifier"}],"title":"SmileLivenessViewController","abstract":[{"text":"UI component for evaluating liveness by detecting face expression.","type":"text"}],"url":"\/documentation\/dotfacecore\/smilelivenessviewcontroller","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SmileLivenessViewController","kind":"identifier"}],"type":"topic"},"doc://com.innovatrics.dot.face.core/documentation/DotFaceCore":{"abstract":[{"type":"text","text":"version: 8.3.0"}],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/dotfacecore","title":"DotFaceCore","identifier":"doc:\/\/com.innovatrics.dot.face.core\/documentation\/DotFaceCore"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"stopAsyncOnStopped:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stopAsyncOnStopped:"}],"op":"replace","path":"\/metadata\/fragments"},{"path":"\/topicSections","value":null,"op":"add"},{"value":null,"path":"\/relationshipsSections","op":"add"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"kind":"identifier","text":"stopAsyncOnStopped:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:BFv()","text":"void (^)(void)","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"onStopped","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]}},{"value":"stopAsyncOnStopped:","op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController~1stopAsync(onStopped:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"stopAsyncOnStopped:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/title","value":"DOTFSmileLivenessViewController"},{"path":"\/references\/doc:~1~1com.innovatrics.dot.face.core~1documentation~1DotFaceCore~1SmileLivenessViewController\/fragments","op":"replace","value":[{"kind":"identifier","text":"DOTFSmileLivenessViewController"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}